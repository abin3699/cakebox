# Generated by Django 4.2.6 on 2023-10-13 04:22

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cake_variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(choices=[('500-gm', '500-gm'), ('750-gm', '750-gm'), ('1-kg', '1-kg'), ('2-kg', '2-kg'), ('3-kg', '3-kg'), ('5-kg', '5-kg')], default='1-kg', max_length=200)),
                ('price', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Catagory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('plum-cake', 'plum-cake'), ('carrot-cake', 'carrot-cake'), ('Red_velvet-cake', 'Red_velvet-cake'), ('cheese-cake', 'cheese-cake'), ('fruit-cake', 'fruit-cake'), ('chiffon-cake', 'chiffon-cake'), ('pound-cake', 'pound-cake'), ('fresh_cream', 'fresh_cream'), ('marble-cake', 'marble-cake'), ('chocolate-cake', 'chocolate-cake'), ('vanila-cake', 'vanila-cake'), ('cup-cake', 'cup-cake')], max_length=200)),
                ('is_available', models.BooleanField(default=True)),
                ('image', models.ImageField(upload_to='image')),
            ],
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.CharField(max_length=300)),
                ('Cake_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cakebxapp.cake_variant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('order-placed', 'order-placed'), ('cancelled', 'cancelled'), ('dispatced', 'dispatched'), ('in-transit', 'in-transit'), ('delivered', 'delivered')], default='order-placed', max_length=200)),
                ('orderd_date', models.DateTimeField(auto_now_add=True)),
                ('expected_date', models.DateField(null=True)),
                ('address', models.CharField(max_length=200)),
                ('Cake_variant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cakebxapp.cake_variant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField()),
                ('start_date', models.DateTimeField()),
                ('due_date', models.DateField()),
                ('Cake_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cakebxapp.cake_variant')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('in-cart', 'in-cart'), ('order-placed', 'order-placed'), ('cancelled', 'cancelled')], default='in-cart', max_length=200)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('Cake_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cakebxapp.cake_variant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='cake_variant',
            name='Catagory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cakebxapp.catagory'),
        ),
    ]
